#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	ЗапросПоДоговору = Новый Запрос;
	ЗапросПоДоговору.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора КАК Вид
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	ЗапросПоДоговору.УстановитьПараметр("Ссылка",Ссылка);
	ВыборДоговора = ЗапросПоДоговору.Выполнить().Выбрать();
	Пока ВыборДоговора.Следующий() Цикл
	Если 
	НЕ ВыборДоговора.Вид = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Отказ = Истина;
		ТекстСообщенияПользователю = "Выбран вид договора, отличный от АбонентскоеОбслуживание ";
		ОбщегоНазначения.СообщитьПользователю (ТекстСообщенияПользователю);
	КонецЕсли;  
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ПериодДействияНачало КАК НачалоДействияДоговора,
	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ПериодДействияКонец КАК КонецДействияДоговора,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.Дата КАК ДатаДок
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	Если 
	Выборка.КонецДействияДоговора < Выборка.ДатаПроведенияРабот ИЛИ Выборка.НачалоДействияДоговора > Выборка.ДатаПроведенияРабот 
	ИЛИ Выборка.КонецДействияДоговора < Выборка.ДатаДок ИЛИ Выборка.НачалоДействияДоговора > Выборка.ДатаДок Тогда
	Отказ = Истина;
	Сообщение = "Дата договора не входит в период его действия";
	ОбщегоНазначения.СообщитьПользователю(Сообщение);
	КонецЕсли;
	
	КонецЦикла;
	

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Очистить();
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	
//	ЗапросДляРегистра = Новый Запрос;
//	ЗапросДляРегистра.Текст = "ВЫБРАТЬ
//	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧаса,
//	|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СуммаАбонентскойПлаты = ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_СтоимостьЧасаРаботы *
//	|		ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы.ФактическиПотраченоЧасов КАК СуммаПлаты,
//	|	ВКМ_ОбслуживаниеКлиента.Ссылка,
//	|	ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы.(
//	|		ФактическиПотраченоЧасов КАК ФактическиПотраченоЧасов)
//	|ИЗ
//	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
//	|ГДЕ
//	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
//	ЗапросДляРегистра.УстановитьПараметр("Ссылка",Ссылка);
//	
//	ВыборкаДетальныеЗаписи = ЗапросДляРегистра.Выполнить().Выбрать();
//	
//	СтоимостьЧасаРаботы = ВыборкаДетальныеЗаписи.СтоимостьЧаса;
//	
	Для Каждого ТекСтрокаУслуги из ВыполненныеРаботы Цикл
		Движение.КоличествоЧасов = ТекСтрокаУслуги.ФактическиПотраченоЧасов;
		Движение.СуммаКОплате = ТекСтрокаУслуги.ФактическиПотраченоЧасов * Договор.ВКМ_СтоимостьЧасаРаботы;
	КонецЦикла;
	
	
	
	
	
КонецПроцедуры

#КонецОбласти